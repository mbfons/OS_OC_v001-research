## open log connection to file
sink(here::here("output", "logs", "log-2-plot-deaths.txt"))
## import libraries
library('tidyverse')
## import measures data
df_input <- read_csv(
here::here("output", "cohorts", "input_2_deaths.csv"),
col_types = cols(
patient_id = col_integer(),
age = col_double(),
sex = col_character(),
date_death = col_date(format="%Y-%m-%d"),
death_category = col_character()
)
)
## import measures data
df_input <- read_csv(
here::here("output", "input_2_deaths.csv"),
col_types = cols(
patient_id = col_integer(),
age = col_double(),
sex = col_character(),
date_death = col_date(format="%Y-%m-%d"),
death_category = col_character()
)
)
df_cleaned <- df_input %>%
mutate(
sex = case_when(
sex=="F" ~ "Female",
sex=="M" ~ "Male",
TRUE ~ sex
),
age_group = cut(
age,
breaks = c(0,18,40,50,60,70,80, Inf),
#labels = ,
dig.lab = 2,
),
week_death = date_death,
time_to_coviddeath = if_else(is.na(date_death), as.Date("2020-10-01") - as.Date("2020-01-01"), as.Date(date_death) - as.Date("2020-01-01")),
event = (!is.na(date_death)) & (death_category == "covid-death")
)
View(df_cleaned)
df_deathsperday <- df_cleaned %>%
filter(!is.na(date_death)) %>%
group_by(date_death, death_category, sex, age_group) %>%
summarise(n=n(), .groups="drop") %>% view()
df_deathsperday <- df_cleaned %>%
filter(!is.na(date_death)) %>%
group_by(date_death, death_category, sex, age_group) %>%
summarise(n=n()) %>% view()
df_deathsperday <- df_cleaned %>%
filter(!is.na(date_death)) %>%
group_by(date_death, death_category, sex, age_group) %>%
summarise(n=n(), .groups="drop") %>% view()
df_deathsperday <- df_cleaned %>%
filter(!is.na(date_death)) %>%
group_by(date_death, death_category, sex, age_group) %>%
summarise(n=n(), .groups="drop") %>%
complete(date_death, death_category, sex, age_group, fill = list(n=0)) %>% view("2")
?complete
plot_deaths <- df_deathsperday %>%
ggplot() +
geom_area(aes(x=date_death, y=n, fill=age_group), stat="identity", colour="transparent") +
facet_grid(cols=vars(sex), rows=vars(death_category))+
labs(x=NULL, y=NULL, fill=NULL, title="Daily deaths, covid versus non-covid")+
scale_x_date(date_breaks = "1 month", labels = scales::date_format("%Y-%m"))+
scale_y_continuous(expand = c(0, 0))+
scale_fill_viridis_d()+#(palette="Set2")+
coord_cartesian(clip = 'off') +
theme_minimal()+
theme(
legend.position = "left",
strip.text.y.right = element_text(angle = 0),
axis.line.x = element_line(colour = "black"),
axis.text.x = element_text(angle = 70, vjust = 1, hjust=1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
plot_deaths
ggsave(
plot= plot_deaths,
filename="plot_deaths.png", path=here::here("output", "plots"),
units = "cm",
height = 10,
width = 15
)
## close log connection
sink()
## open log connection to file
sink(here::here("output", "logs","log-3-plot-activity.txt"))
## import libraries
library('tidyverse')
# create look-up table to iterate over
md_tbl <- tibble(
measure = c("cholesterol", "cholesterol", "inr", "inr"),
measure_label = c("Cholesterol", "Cholesterol", "INR", "INR"),
by = c("practice", "stp", "practice", "stp"),
by_label = c("by practice", "by STP", "by practice", "by STP"),
id = paste0(measure, "_", by),
numerator = measure,
denominator = "population",
group_by = c("practice", "stp", "practice", "stp"),
)
View(md_tbl)
## import measures data from look-up
measures <- md_tbl %>%
mutate(
data = map(id, ~read_csv(here::here("output", "measures", glue::glue("measure_{.}.csv")))),
)
## import measures data from look-up
measures <- md_tbl %>%
mutate(
data = map(id, ~read_csv(here::here("output", "measures", glue::glue("measure_{.}.csv")))),
)
View(measures)
View(measures[[9]][[1]])
View(measures[[9]][[1]])
quibble <- function(x, q = c(0.25, 0.5, 0.75)) {
## function that takes a vector and returns a tibble of its quantiles
tibble("{{ x }}" := quantile(x, q), "{{ x }}_q" := q)
}
## generate plots for each measure within the data frame
measures_plots <- measures %>%
mutate(
data_quantiles = map(data, ~ (.) %>% group_by(date) %>% summarise(quibble(value, seq(0,1,0.1)))),
plot_by = pmap(lst( group_by, data, measure_label, by_label),
function(group_by, data, measure_label, by_label){
data %>% mutate(value_10000 = value*10000) %>%
ggplot()+
geom_line(aes_string(x="date", y="value_10000", group=group_by), alpha=0.2, colour='blue', size=0.25)+
scale_x_date(date_breaks = "1 month", labels = scales::date_format("%Y-%m"))+
labs(
x=NULL, y=NULL,
title=glue::glue("{measure_label} measurement"),
subtitle =  glue::glue("{by_label}, per 10,000 patients")
)+
theme_bw()+
theme(
panel.border = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.text.x = element_text(angle = 70, vjust = 1, hjust=1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
)
}
),
plot_quantiles = pmap(lst( group_by, data_quantiles, measure_label, by_label),
function(group_by, data_quantiles, measure_label, by_label){
data_quantiles %>% mutate(value_10000 = value*10000) %>%
ggplot()+
geom_line(aes(x=date, y=value_10000, group=value_q, linetype=value_q==0.5, size=value_q==0.5), colour='blue')+
scale_linetype_manual(breaks=c(TRUE, FALSE), values=c("solid", "dotted"), guide=FALSE)+
scale_size_manual(breaks=c(TRUE, FALSE), values=c(1, 0.4), guide=FALSE)+
scale_x_date(date_breaks = "1 month", labels = scales::date_format("%Y-%m"))+
labs(
x=NULL, y=NULL,
title=glue::glue("{measure_label} measurement volume per 10,000 patients"),
subtitle = glue::glue("quantiles {by_label}")
)+
theme_bw()+
theme(
panel.border = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.text.x = element_text(angle = 70, vjust = 1, hjust=1),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#axis.line.y = element_blank(),
)
}
)
)
## plot the charts (by variable)
measures_plots %>%
transmute(
plot = plot_by,
units = "cm",
height = 10,
width = 15,
limitsize=FALSE,
filename = str_c("plot_each_", id, ".png"),
path = here::here("output", "plots"),
) %>%
pwalk(ggsave)
## plot the charts (by quantile)
measures_plots %>%
transmute(
plot = plot_quantiles,
units = "cm",
height = 10,
width = 15,
limitsize=FALSE,
filename = str_c("plot_quantiles_", id, ".png"),
path = here::here("output", "plots"),
) %>%
pwalk(ggsave)
## close log connection
sink()
?transmute
View(measures_plots)
View(measures_plots$plot_by[1])
View(measures_plots$plot_by[[1]])
View(measures$data)
quibble(c(1:20))
quibble(c(0:20))
View(measures_plots)
View(measures_plots[[10]][[1]])
View(measures_plots[[10]][[1]])
measures_plots %>%
transmute(
plot = plot_by,
units = "cm",
height = 10,
width = 15,
limitsize=FALSE,
filename = str_c("plot_each_", id, ".png"),
path = here::here("output", "plots"),
) %>% view()
?pwalk
## library
library('tidyverse')
## import cohort data
df_input <- read_csv(
here::here("output", "input_ori.csv"))
getwd()
?here
setwd("C:/Users/martina.fonseca_nhsx/Sandbox/OS_OC_v001-research")
## import cohort data
df_input <- read_csv(
here::here("output", "input_ori.csv"))
getwd()
library(here)
